{"version":3,"sources":["components/Layout.tsx","hooks/useObservable.ts","components/FileSaveDialog.tsx","components/FileSaver.tsx","components/FileLoader.tsx","examples/index.ts","components/EditorPage/ExampleLoader.tsx","components/EditorPage/TopbarActions.tsx","components/EditorPage/EditorPage.tsx","components/SimulationPage/GraphPage/GraphView.tsx","components/KeyValueTable.tsx","components/SimulationPage/GraphPage/HighlightedVertexDetails.tsx","components/SimulationPage/GraphPage/GraphPage.tsx","components/SimulationPage/DistributionPage/DistributionConfigForm.tsx","components/ScientificNotation.tsx","components/SimulationPage/DistributionPage/DistributionChart.tsx","components/SimulationPage/DistributionPage/DistributionStatistics.tsx","components/SimulationPage/DistributionPage/DistributionPage.tsx","components/SimulationPage/TopbarActions.tsx","components/SimulationPage/SimulationPage.tsx","model/generateGraphML.ts","components/Root.tsx","serviceWorker.ts","model/DegreeDistributionCollector.ts","model/DistanceToRootDistributionCollector.ts","model/Vertex.ts","model/Graph.ts","model/TimedSimulation/Timer.ts","model/TimedSimulation/luaSimulation/openStdLib.ts","model/TimedSimulation/luaSimulation/luaSimulation.ts","model/TimedSimulation/TimedSimulation.ts","model/SimulationState.ts","index.tsx","model/AppState.ts","examples/barabasi_albert.lua","examples/nrrw.lua","examples/bgrw.lua","examples/gnp.lua","examples/random_tree.lua","examples/tutorial.lua"],"names":["Layout_styles","Object","styles","grow","flexGrow","container","flexDirection","overflow","flex","display","maxWidth","appbar","backgroundColor","index_es","grey","components_Layout","props","react","className","classes","position","variant","color","actions","children","useObservable","observable","initialValue","_a","value","setValue","subscription","subscribe","newValue","unsubscribe","components_FileSaveDialog","defaultFilename","filename","setFilename","save","FileSaver_min","contents","Blob","type","open","onClose","aria-labelledby","id","autoFocus","margin","label","fullWidth","onChange","e","target","onClick","FileSaver","p","isOpen","setOpen","button","readFile","file","Promise","resolve","reject","reader","FileReader","onload","result","onabort","onerror","readAsText","components_FileLoader","input","current","click","style","evt","files","item","then","onLoad","ref","name","load","fetch","resp","text","src_examples","barabasi_albert_default","a","nrrw_default","bgrw_default","gnp_default","random_tree_default","ExampleLoader","menuAnchor","setMenuAnchor","setCodeAndClose","newCode","setCode","currentTarget","anchorEl","map","example","i","key","EditorPage_TopbarActions","href","code","run","EditorPage","appState","_b","editor","setEditor","error","lastError$","undefined","code$","updateError","model","getModel","editor_main","setModelMarkers","startLineNumber","lineNo","startColumn","endLineNumber","endColumn","message","messageFor","severity","Warning","lib_default","language","theme","editorDidMount","newEditor","options","minimap","enabled","automaticLayout","GraphView_styles","svg","top","left","height","GraphPage_GraphView","onHighlightChangeWithFallback","onHighlightChange","graphView","GraphView_GraphViewD3","graph","bufferBy","autozoomEnabled$","destroy","width","GraphViewD3","_this","this","nodes","links","isAutozooming","autozoomEnabled","autozoomTemporarilyDisabled","onChanges","changes","forEach","processChange","update","event","vertex","vertices","vertexToCopyPos","neighbors","length","copiedProps","x","y","__assign","index","edges","b","source","ticked","linkLines","attr","d","isSelfLoop","x1","y1","x2","y2","nodeCircles","node","attributes","get","autozoom","dragstarted","d3","active","force","alphaTarget","restart","fx","fy","dragged","dragended","mouseover","hovered","Set","transition","duration","has","highlightNode","link","highlightLink","mouseout","zoomed","disableAutozoom","transformationGroup","transform","reenableAutozoom","changeObservable","clientWidth","clientHeight","zoom","on","strength","call","append","selectAll","event$","pipe","buffer","c","autozoomSubscription","prototype","stop","clearReenableAutozoomTimer","shouldAutozoom","linkJoin","data","exit","remove","enter","merge","nodeJoin","alpha","reenableAutozoomTimer","main","rootNode","bounds","getBBox","parent","parentElement","fullHeight","midX","midY","scale","Math","min","max","translate","console","debug","KeyValueTable_styles","row","components_KeyValueTable","entries","padding","cells","root","cell","j","HighlightedVertexDetails_styles","GraphPage_HighlightedVertexDetails","vertexId","toString","val","push","GraphPage_styles","details","bottom","right","GraphPage","setVertexId","simulation","tick$","DistributionConfigForm_styles","radioGroup","DistributionConfigForm_DistributionConfigForm","_super","DistributionConfigForm","__extends","render","aria-label","transformation","setTransformation","control","xLog","setXLog","yLog","setYLog","DistributionPage_DistributionConfigForm","trimmedExponential","n","toExponential","split","mantissa","exponent","substring","components_ScientificNotation","normalExponent","DistributionPage_DistributionChart","distribution","v","applyLog","xConfig","DistributionChart_config","yConfig","ResponsiveContainer","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","domain","ticks","tickFormatter","normalize","YAxis","Legend","verticalAlign","Tooltip","formatter","labelFormatter","Line","stroke","isAnimationActive","log","values","pow","maxVal","reduce","maxBy","Infinity","minVal","minBy","range","ceil","floor","logTicks","naturalCount","tickCount","tickPeriod","filter","linearTicks","selector","datum","DistributionChart_assign","log10","pdf","cdf","ccdf","total","DistributionPage_DistributionStatistics","nonZeroValues","count","curr","mean","DistributionPage_styles","chartContainer","paddingBottom","DistributionPage_DistributionView","DistributionView","apply","arguments","state","generateCSVBlob","csv","join","DistributionPage_extends","componentDidMount","setState","componentWillUnmount","config","__rest","DistributionPage_assign","spacing","xs","DistributionPage","TopbarActions_styles","chip","sliderWrapper","track","background","thumb","formControl","SimulationPage_TopbarActions","saveDialogOpen","setSaveDialogOpen","avatar","vertexCount","edgeCount","htmlFor","speed","setSpeed","parseInt","paused","play","PlayArrow_default","pause","Pause_default","Stop_default","MoreVert_default","setAutozoomEnabled","generateGraphML","SimulationPage_styles","hidden","SimulationPage","simulationState","degreeDistributionCollector","distanceToRootDistributionCollector","currentTab","setCurrentTab","paused$","speed$","edgeCount$","sampleTime","vertexCount$","graphViewClasses","degreeDistClasses","distanceDistClasses","topbarActionsProps","keyXml","Array","from","keys","agg","union","@id","@for","@attr.name","@attr.type","default","#text","nodeXml","@key","edgeXml","@source","@target","graphXml","graphml","@xmlns","@xmlns:xsi","@xsi:schemaLocation","@edgedefault","edge","xml","xmlbuilder_lib","encoding","end","pretty","bind","SimulationPage_assign","indicatorColor","textColor","centered","distribution$","typography","useNextVariants","palette","primary","secondary","lightBlue","components_Root","simulationState$","Boolean","window","location","hostname","match","changeDist","dist","idx","amt","model_DegreeDistributionCollector","DegreeDistributionCollector","distributionSubject","ReplaySubject","degrees","Map","asObservable","onGraphEvents","processEvent","next","set","v1","v2","d1","d2","interval","DistanceToRootDistributionCollector_changeDist","model_DistanceToRootDistributionCollector","DistanceToRootDistributionCollector","distances","Graph","eventSubject","edgeCountSubject","vertexCountSubject","addVertex","model_Vertex","connectVertices","edgeId","setAttribute","getAttribute","getNeighbor","getNeighborCount","getEdge","getRandomVertex","random","getRandomEdge","getRandomNeighbor","neighborIndex","Timer","initialSpeed","callback","running","shouldReschedule","destroyed","handler","reschedule","isPaused","period","lua","fengari_web_bundle","stdlib","luaSimulation_openStdLib","L","_i","stdlib_1","func","lua_pushcfunction","fn","lua_setglobal","define","returnIndex","id1","lua_tonumber","id2","lua_tostring","lua_pushboolean","returnString","neighborId","neighborCount","returnNumber","returnEdge","lua_pushnumber","lua_pushnil","num","str","lua_pushstring","luaSimulation_lua","lauxlib","lualib","prefix","trim","sufix","wrapCode","runtimeError","syntaxError","TimedSimulation","onError","pausedSubject","speedSubject","tickSubject","Subject","timer","tick","iterator","done","model_Graph","luaL_newstate","luaL_openlibs","luaL_loadstring","regex","matches","lua_pcall","L2","lua_newthread","lua_getglobal","lua_resume","sent","e_1","lua_Debug","lua_getstack","lua_getinfo","currentline","luaSimulation","TimedSimulation_Timer","SimulationState","autozoomEnabledSubject","model_TimedSimulation_TimedSimulation","src_appState","codeSubject","simulationStateSubject","lastErrorSubject","model_SimulationState","tutorial_default","r","react_dom","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.98b7523b.chunk.js","sourcesContent":["import * as React from 'react'\nimport { ReactNode } from 'react'\nimport {\n  Toolbar,\n  Typography,\n  AppBar,\n  createStyles,\n  withStyles,\n  colors\n} from '@material-ui/core'\n\nconst styles = createStyles({\n  grow: {\n    flexGrow: 1\n  },\n  container: {\n    flexDirection: 'column',\n    overflow: 'hidden',\n    flex: 1,\n    display: 'flex',\n    maxWidth: '100%'\n  },\n  appbar: {\n    backgroundColor: colors.grey[300]\n  }\n})\n\ninterface Props {\n  classes: Record<keyof typeof styles, string>\n  actions: ReactNode\n  children: ReactNode\n}\n\nconst Layout = (props: Props) => (\n  <div className={props.classes.container}>\n    <div>\n      <AppBar position=\"static\" className={props.classes.appbar}>\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            color=\"inherit\"\n            className={props.classes.grow}\n          >\n            Netmosa\n          </Typography>\n          {props.actions}\n        </Toolbar>\n      </AppBar>\n    </div>\n    {props.children}\n  </div>\n)\n\nexport default withStyles(styles)(Layout)\n","import { useState, useEffect } from 'react'\nimport { Observable } from 'rxjs'\n\nexport default function useObservable<T>(\n  observable: Observable<T>,\n  initialValue: T\n) {\n  const [value, setValue] = useState(initialValue)\n\n  useEffect(() => {\n    const subscription = observable.subscribe((newValue: T) => {\n      setValue(newValue)\n    })\n    return () => subscription.unsubscribe()\n  }, [])\n\n  return value\n}\n","import * as React from 'react'\nimport { useState } from 'react'\nimport { saveAs } from 'file-saver'\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  TextField,\n  DialogContentText,\n  DialogContent\n} from '@material-ui/core'\n\ntype BlobFunction = () => Blob\n\nexport interface ButtonProps {\n  onClick: () => void\n}\n\nexport interface Props<T> {\n  contents: string | Blob | BlobFunction\n  defaultFilename: string\n  open: boolean\n  onClose: () => void\n}\n\nfunction FileSaveDialog<T>(props: Props<T>) {\n  const [filename, setFilename] = useState(props.defaultFilename)\n\n  const getBlob = () => {\n    if (typeof props.contents === 'function') {\n      return props.contents()\n    }\n\n    if (typeof props.contents === 'string') {\n      return new Blob([props.contents], { type: 'text/plain;charset=utf-8' })\n    }\n\n    return props.contents\n  }\n\n  const save = () => saveAs(getBlob(), filename)\n  const saveAndClose = () => {\n    save()\n    props.onClose()\n  }\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.onClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">Save File</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Set the filename of the file to download it.\n        </DialogContentText>\n        <TextField\n          autoFocus={true}\n          margin=\"dense\"\n          id=\"filename\"\n          label=\"Filename\"\n          fullWidth={true}\n          value={filename}\n          onChange={e => setFilename(e.target.value)}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.onClose}>Cancel</Button>\n        <Button onClick={saveAndClose}>Save</Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default FileSaveDialog\n","import * as React from 'react'\nimport { useState, ReactElement } from 'react'\nimport { Button } from '@material-ui/core'\n\nimport FileSaveDialog from './FileSaveDialog'\n\ntype BlobFunction = () => Blob\n\nexport interface ButtonProps {\n  onClick: () => void\n}\n\nexport interface Props<T> {\n  contents: string | Blob | BlobFunction\n  defaultFilename: string\n  label?: string\n  button?: (p: ButtonProps) => ReactElement<T>\n}\n\nexport default function FileSaver<T>(p: Props<T>) {\n  const [isOpen, setOpen] = useState(false)\n  const label = p.label || 'Save File'\n\n  const onClose = () => setOpen(false)\n  const open = () => setOpen(true)\n\n  const button = p.button ? (\n    p.button({ onClick: open })\n  ) : (\n    <Button color=\"inherit\" onClick={open}>\n      {label}\n    </Button>\n  )\n\n  return (\n    <>\n      {button}\n      <FileSaveDialog\n        open={isOpen}\n        onClose={onClose}\n        defaultFilename={p.defaultFilename}\n        contents={p.contents}\n      />\n    </>\n  )\n}\n","import * as React from 'react'\nimport { useRef, ReactElement, ChangeEvent } from 'react'\nimport { Button } from '@material-ui/core'\n\nconst readFile = (file: File) =>\n  new Promise<string>((resolve, reject) => {\n    const reader = new FileReader()\n\n    reader.onload = (e: ProgressEvent) => {\n      resolve(reader.result as string)\n    }\n\n    reader.onabort = () => reject('Aborted')\n    reader.onerror = () => reject('Error on reading file')\n\n    reader.readAsText(file)\n  })\n\nexport interface ButtonProps {\n  onClick: () => void\n}\n\nexport interface Props<T> {\n  onLoad: (contents: string) => void\n  label?: string\n  button?: (p: ButtonProps) => ReactElement<T>\n}\n\n/** Reads a file as a string and return it through onLoad callback */\nfunction FileLoader<T>(p: Props<T>) {\n  const input = useRef<HTMLInputElement>(null)\n  const label = p.label || 'Open File'\n\n  const open = () => input.current && input.current.click()\n\n  const handleFileSelect = (evt: ChangeEvent<HTMLInputElement>) => {\n    const file = evt.target.files && evt.target.files.item(0)\n    if (file) {\n      readFile(file).then(p.onLoad)\n    }\n  }\n\n  const button = p.button ? (\n    p.button({ onClick: open })\n  ) : (\n    <Button onClick={open} color=\"inherit\">\n      {label}\n    </Button>\n  )\n\n  return (\n    <>\n      {button}\n      <input\n        type=\"file\"\n        style={{ display: 'none' }}\n        onChange={handleFileSelect}\n        ref={input}\n      />\n    </>\n  )\n}\n\nexport default FileLoader\n","import barabasiAlbertFile from './barabasi_albert.lua'\nimport nrrwFile from './nrrw.lua'\nimport bgrwFile from './bgrw.lua'\nimport gnpFile from './gnp.lua'\nimport randomTreeFile from './random_tree.lua'\n\nconst e = (name: string, file: string) => ({\n  name,\n  load: () => fetch(file).then(resp => resp.text())\n})\n\nexport const barabasiAlbert = e('Barabási–Albert', barabasiAlbertFile)\nexport const nrrw = e('No Restarting Random Walk (NRRW)', nrrwFile)\nexport const bgrw = e('Bernoulli Growth Random Walk (BGRW)', bgrwFile)\nexport const gnp = e('Erdős–Rényi (GNP)', gnpFile)\nexport const randomTree = e('Uniform Random Tree', randomTreeFile)\n\nconst examples = [barabasiAlbert, nrrw, bgrw, gnp, randomTree]\n\nexport default examples\n","import * as React from 'react'\nimport { useState } from 'react'\nimport { Button, Menu, MenuItem } from '@material-ui/core'\nimport examples from 'examples'\n\ninterface Props {\n  setCode: (code: string) => void\n}\n\nexport default (props: Props) => {\n  const [menuAnchor, setMenuAnchor] = useState<HTMLElement | null>(null)\n\n  const setCodeAndClose = (newCode: string) => {\n    props.setCode(newCode)\n    setMenuAnchor(null)\n  }\n\n  return (\n    <>\n      <Button\n        color=\"inherit\"\n        onClick={({ currentTarget }) => setMenuAnchor(currentTarget)}\n      >\n        Examples\n      </Button>\n      <Menu\n        anchorEl={menuAnchor}\n        open={menuAnchor !== null}\n        onClose={() => setMenuAnchor(null)}\n      >\n        {examples.map((example, i) => (\n          <MenuItem\n            key={i}\n            onClick={() => example.load().then(setCodeAndClose)}\n          >\n            {example.name}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  )\n}\n","import * as React from 'react'\nimport FileSaver from 'components/FileSaver'\nimport FileLoader from 'components/FileLoader'\n\nimport ExampleLoader from './ExampleLoader'\nimport { Button } from '@material-ui/core'\n\ninterface Props {\n  code: string\n  run: () => void\n  setCode: (code: string) => void\n}\n\nconst TopbarActions = (props: Props) => (\n  <>\n    <Button\n      color=\"inherit\"\n      href=\"https://github.com/bamorim/netmosa/tree/master/docs/index.md\"\n      target=\"_blank\"\n    >\n      Docs\n    </Button>\n    <FileSaver\n      contents={props.code}\n      defaultFilename=\"script.lua\"\n      label=\"Save\"\n    />\n    <FileLoader onLoad={props.setCode} label=\"Open\" />\n    <ExampleLoader setCode={props.setCode} />\n    <Button onClick={() => props.run()} color=\"inherit\">\n      Start\n    </Button>\n  </>\n)\n\nexport default TopbarActions\n","import * as React from 'react'\nimport { useState, useEffect } from 'react'\nimport MonacoEditor from 'react-monaco-editor'\nimport * as monaco from 'monaco-editor'\nimport Layout from 'components/Layout'\n\nimport AppState from 'model/AppState'\nimport SimulationError from 'model/SimulationError'\nimport useObservable from 'hooks/useObservable'\nimport TopbarActions from './TopbarActions'\n\ninterface Props {\n  appState: AppState\n}\n\nconst messageFor = (error: SimulationError) => {\n  switch (error.type) {\n    case 'runtime':\n      return 'Runtime Error'\n    case 'syntax':\n      return error.message || 'Syntax Error'\n  }\n}\n\nconst Editor = ({ appState }: Props) => {\n  const [\n    editor,\n    setEditor\n  ] = useState<monaco.editor.IStandaloneCodeEditor | null>(null)\n  const error = useObservable(appState.lastError$, undefined)\n  const code = useObservable(appState.code$, '')\n\n  const updateError = () => {\n    const model = editor && editor.getModel()\n\n    if (model && error) {\n      monaco.editor.setModelMarkers(model, 'test', [\n        {\n          startLineNumber: error.lineNo,\n          startColumn: 1,\n          endLineNumber: error.lineNo,\n          endColumn: 1000,\n          message: messageFor(error),\n          severity: monaco.MarkerSeverity.Warning\n        }\n      ])\n    }\n  }\n\n  useEffect(updateError, [code, error])\n\n  const editorDidMount = (newEditor: monaco.editor.IStandaloneCodeEditor) => {\n    setEditor(newEditor)\n    updateError()\n  }\n\n  return (\n    <Layout\n      actions={\n        <TopbarActions\n          code={code}\n          setCode={appState.setCode}\n          run={appState.run}\n        />\n      }\n    >\n      <MonacoEditor\n        language=\"lua\"\n        theme=\"vs-light\"\n        value={code}\n        onChange={(newCode: string) => appState.setCode(newCode)}\n        editorDidMount={editorDidMount}\n        options={{\n          minimap: { enabled: false },\n          automaticLayout: true\n        }}\n      />\n    </Layout>\n  )\n}\n\nexport default Editor\n","import * as React from 'react'\nimport { useLayoutEffect, useRef } from 'react'\nimport * as d3 from 'd3'\nimport { Subscription, Observable } from 'rxjs'\nimport { buffer, map } from 'rxjs/operators'\nimport { createStyles, withStyles } from '@material-ui/core'\nimport { clearTimeout, setTimeout } from 'timers'\n\nimport { VertexId } from 'model/types'\nimport ReadGraph from 'model/ReadGraph'\nimport GraphEvent from 'model/GraphEvent'\n\nconst styles = createStyles({\n  container: {\n    flex: '1',\n    position: 'relative'\n  },\n  svg: {\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    height: '100%'\n  }\n})\n\ntype HighlightChangeCallback = (vertex?: VertexId) => void\n\ninterface Props {\n  graph: ReadGraph\n  autozoomEnabled$?: Observable<boolean>\n  bufferBy?: Observable<void | {}>\n  classes: Record<keyof typeof styles, string>\n  onHighlightChange?: HighlightChangeCallback\n}\n\nconst GraphView = (props: Props) => {\n  const container = useRef(null)\n  useLayoutEffect(\n    () => {\n      const noop = () => null\n\n      const onHighlightChangeWithFallback = props.onHighlightChange\n        ? props.onHighlightChange\n        : noop\n\n      const graphView = new GraphViewD3(\n        container.current! as SVGSVGElement,\n        props.graph,\n        onHighlightChangeWithFallback,\n        props.bufferBy,\n        props.autozoomEnabled$\n      )\n      return () => graphView.destroy()\n    },\n    [props.graph]\n  )\n\n  return (\n    <div className={props.classes.container}>\n      <svg\n        ref={container}\n        className={props.classes.svg}\n        width=\"100%\"\n        height=\"100%\"\n      />\n    </div>\n  )\n}\n\nexport default withStyles(styles)(GraphView)\n\ninterface Node extends d3.SimulationNodeDatum {\n  index: number\n}\n\ninterface Link extends d3.SimulationLinkDatum<Node> {\n  index: number\n  source: Node\n  target: Node\n}\n\nclass GraphViewD3 {\n  private graph: ReadGraph\n  private nodes: Node[] = []\n  private links: Link[] = []\n  private force: d3.Simulation<Node, Link>\n  private svg: d3.Selection<SVGSVGElement, {}, null, undefined>\n  private transformationGroup: d3.Selection<d3.BaseType, {}, null, undefined>\n  private linkLines: d3.Selection<SVGLineElement, Link, d3.BaseType, {}>\n  private nodeCircles: d3.Selection<SVGCircleElement, Node, d3.BaseType, {}>\n  private zoom: d3.ZoomBehavior<Element, {}>\n  private subscription: Subscription\n  private onHighlightChange: HighlightChangeCallback\n\n  // This is used to avoid disabling autozoom when autozooming\n  private isAutozooming: boolean = false\n\n  // This is to avoid autozoom if manual zoom occurs\n  private autozoomEnabled: boolean = true\n  private autozoomTemporarilyDisabled: boolean = false\n  private reenableAutozoomTimer?: NodeJS.Timeout\n  // Subscription to react to autozoom config changes\n  private autozoomSubscription?: Subscription\n\n  constructor(\n    container: SVGSVGElement,\n    graph: ReadGraph,\n    onHighlightChange: HighlightChangeCallback,\n    bufferBy?: Observable<void | {}>,\n    autozoomEnabled$?: Observable<boolean>\n  ) {\n    this.graph = graph\n    this.onHighlightChange = onHighlightChange\n    const width = container.clientWidth\n    const height = container.clientHeight\n    const bodyStrength = -100\n    const linkStrength = 0.5\n\n    this.zoom = d3.zoom().on('zoom', this.zoomed)\n\n    this.force = d3\n      .forceSimulation<Node, Link>()\n      .nodes(this.nodes)\n      .on('tick', this.ticked)\n      .force('charge', d3.forceManyBody().strength(bodyStrength))\n      .force(\n        'link',\n        d3.forceLink<Node, Link>(this.links).strength(linkStrength)\n      )\n      .force('center', d3.forceCenter(width / 2, height / 2))\n\n    this.svg = d3.select(container).call(this.zoom)\n\n    this.transformationGroup = this.svg.append('g')\n\n    this.linkLines = this.transformationGroup\n      .append('g')\n      .attr('stroke', '#000')\n      .attr('stroke-width', 1.5)\n      .attr('fill', 'transparent')\n      .selectAll('.link')\n\n    this.nodeCircles = this.transformationGroup\n      .append('g')\n      .attr('stroke', '#fff')\n      .attr('stroke-width', 1.5)\n      .selectAll('.node')\n\n    this.update()\n\n    let changeObservable: Observable<GraphEvent[]>\n\n    if (bufferBy) {\n      changeObservable = this.graph.event$.pipe(buffer(bufferBy))\n    } else {\n      changeObservable = this.graph.event$.pipe(map(c => [c]))\n    }\n\n    this.subscription = changeObservable.subscribe(this.onChanges)\n\n    this.autozoomEnabled = true\n    if (autozoomEnabled$) {\n      this.autozoomSubscription = autozoomEnabled$.subscribe(\n        (enabled: boolean) => {\n          this.autozoomEnabled = enabled\n        }\n      )\n    }\n  }\n\n  public destroy() {\n    this.subscription.unsubscribe()\n    if (this.autozoomSubscription) {\n      this.autozoomSubscription.unsubscribe()\n    }\n    this.force.stop()\n    this.clearReenableAutozoomTimer()\n  }\n\n  private onChanges = (changes: GraphEvent[]) => {\n    changes.forEach(this.processChange)\n    this.update()\n  }\n\n  private processChange = (event: GraphEvent) => {\n    switch (event.type) {\n      case 'AddedVertex':\n        const vertex = this.graph.vertices[event.id]\n        const vertexToCopyPos =\n          vertex.neighbors.length > 0\n            ? this.nodes[vertex.neighbors[0]]\n            : this.nodes.length > 0\n            ? this.nodes[0]\n            : undefined\n\n        const copiedProps = vertexToCopyPos\n          ? { x: vertexToCopyPos.x || 0, y: vertexToCopyPos.y || 0 }\n          : { x: 0, y: 0 }\n\n        this.nodes[event.id] = {\n          ...copiedProps,\n          index: event.id\n        }\n        break\n      case 'AddedEdge':\n        const [a, b] = this.graph.edges[event.id]\n        this.links[event.id] = {\n          source: this.nodes[a],\n          target: this.nodes[b],\n          index: event.id\n        }\n        break\n      default:\n    }\n  }\n\n  private ticked = () => {\n    this.linkLines.attr('d', (d: Link) => {\n      const isSelfLoop = d.source.index === d.target.index\n      const x1 = d.source.x || 0\n      const y1 = d.source.y || 0\n      const x2 = d.target.x || 0\n      const y2 = d.target.y || 0\n\n      if (isSelfLoop) {\n        return `M${x1},${y1} a8,8 0 1,1 1,0`\n      } else {\n        return `M${x1},${y1} L ${x2},${y2}`\n      }\n    })\n\n    this.nodeCircles\n      .attr('cx', (d: Node) => d.x || 0)\n      .attr('cy', (d: Node) => d.y || 0)\n      .attr(\n        'fill',\n        (node: Node) =>\n          this.graph.vertices[node.index].attributes.get('color') || 'white'\n      )\n\n    // Fit zoom\n    this.autozoom()\n  }\n\n  private shouldAutozoom() {\n    return this.autozoomEnabled && !this.autozoomTemporarilyDisabled\n  }\n\n  private update() {\n    const linkJoin = this.linkLines.data(this.links)\n\n    // Just remove old link lines\n    linkJoin.exit().remove()\n\n    // Create new link lines\n    this.linkLines = linkJoin\n      .enter()\n      .append<SVGLineElement>('path')\n      .merge(this.linkLines)\n\n    const nodeJoin = this.nodeCircles.data(this.nodes)\n\n    // Just remove old node circles\n    nodeJoin.exit().remove()\n\n    // Create new node circles\n    this.nodeCircles = nodeJoin\n      .enter()\n      .append<SVGCircleElement>('circle')\n      .attr('r', 8)\n      .attr('stroke', 'black')\n      .call(\n        d3\n          .drag()\n          .on('start', this.dragstarted)\n          .on('drag', this.dragged)\n          .on('end', this.dragended)\n      )\n      .on('mouseover', this.mouseover)\n      .on('mouseout', this.mouseout)\n      .merge(this.nodeCircles)\n\n    // Update force nodes\n    this.force.nodes(this.nodes)\n\n    // Update link force links\n    const forceLink = this.force.force('link') as d3.ForceLink<Node, Link>\n    forceLink.links(this.links)\n\n    // Restart\n    this.force.restart()\n    this.force.alpha(0.1)\n  }\n\n  private dragstarted = (d: Node) => {\n    if (!d3.event.active) {\n      this.force.alphaTarget(0.3).restart()\n    }\n    d.fx = d.x\n    d.fy = d.y\n  }\n\n  /** Set fx/fy to fix the node in the mouse position */\n  private dragged = (d: Node) => {\n    d.fx = d3.event.x\n    d.fy = d3.event.y\n  }\n\n  /** Remove fx/fy after drag to stop dragging */\n  private dragended = (d: Node) => {\n    if (!d3.event.active) {\n      this.force.alphaTarget(0)\n    }\n\n    d.fx = null\n    d.fy = null\n  }\n\n  private mouseover = (hovered: Node) => {\n    this.onHighlightChange(hovered.index)\n    const neighbors = new Set(this.graph.vertices[hovered.index].neighbors)\n    const highlightNode = (node: Node) =>\n      node === hovered || neighbors.has(node.index)\n    const highlightLink = (link: Link) =>\n      link.source === hovered || link.target === hovered\n\n    const transition = d3.transition().duration(200)\n\n    this.nodeCircles\n      .transition(transition)\n      .style('opacity', (node: Node) => (highlightNode(node) ? 1.0 : 0.2))\n\n    this.linkLines\n      .transition(transition)\n      .style('opacity', (link: Link) => (highlightLink(link) ? 1.0 : 0.2))\n  }\n\n  private mouseout = (node: Node) => {\n    this.onHighlightChange()\n    const transition = d3.transition().duration(200)\n    this.nodeCircles.transition(transition).style('opacity', 1.0)\n    this.linkLines.transition(transition).style('opacity', 1.0)\n  }\n\n  private zoomed = () => {\n    if (!this.isAutozooming) {\n      this.disableAutozoom()\n    }\n    this.transformationGroup.attr('transform', d3.event.transform)\n  }\n\n  private disableAutozoom() {\n    this.clearReenableAutozoomTimer()\n    this.autozoomTemporarilyDisabled = true\n    this.reenableAutozoomTimer = setTimeout(this.reenableAutozoom, 5000)\n  }\n\n  private reenableAutozoom = () => {\n    this.autozoomTemporarilyDisabled = false\n    this.autozoom()\n  }\n\n  private clearReenableAutozoomTimer() {\n    if (this.reenableAutozoomTimer) {\n      clearTimeout(this.reenableAutozoomTimer)\n    }\n  }\n\n  /** Scale the zoom to fit everything */\n  private autozoom() {\n    if (!this.shouldAutozoom()) {\n      return\n    }\n    const rootNode = this.transformationGroup.node() as SVGGraphicsElement\n    const bounds = rootNode.getBBox()\n    const parent = rootNode.parentElement\n    const fullWidth =\n      parent &&\n      (parent.clientWidth ||\n        (parent.parentElement && parent.parentElement.clientWidth))\n    const fullHeight =\n      parent &&\n      (parent.clientHeight ||\n        (parent.parentElement && parent.parentElement.clientHeight))\n\n    if (!fullWidth || !fullHeight) {\n      console.debug('Could not get parent dimensions')\n      return\n    }\n\n    const width = bounds.width\n    const height = bounds.height\n    const midX = bounds.x + width / 2\n    const midY = bounds.y + height / 2\n    if (width === 0 || height === 0) {\n      return // nothing to fit\n    }\n    const scale = Math.min(\n      1,\n      0.95 / Math.max(width / fullWidth, height / fullHeight)\n    )\n\n    this.isAutozooming = true\n    this.svg.call(\n      this.zoom.transform,\n      d3.zoomIdentity\n        .translate(fullWidth / 2, fullHeight / 2)\n        .scale(scale)\n        .translate(-midX, -midY)\n    )\n    this.isAutozooming = false\n  }\n}\n","import * as React from 'react'\nimport {\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  createStyles,\n  withStyles\n} from '@material-ui/core'\n\ninterface Props {\n  entries: React.ReactNode[][]\n  classes: Record<keyof typeof styles, string>\n}\n\nconst styles = createStyles({\n  row: {\n    height: 'auto !important'\n  }\n})\n\nconst KeyValueTable = ({ entries, classes }: Props) => (\n  <Table padding=\"dense\">\n    <TableBody>\n      {entries.map((cells, i) => (\n        <TableRow key={i} classes={{ root: classes.row }}>\n          {cells.map((cell, j) => (\n            <TableCell key={j}>{cell}</TableCell>\n          ))}\n        </TableRow>\n      ))}\n    </TableBody>\n  </Table>\n)\n\nexport default withStyles(styles)(KeyValueTable)\n","import * as React from 'react'\nimport { createStyles, withStyles, Paper } from '@material-ui/core'\n\nimport KeyValueTable from 'components/KeyValueTable'\nimport { VertexId } from 'model/types'\nimport ReadGraph from 'model/ReadGraph'\n\nexport interface Props {\n  vertexId: VertexId\n  graph: ReadGraph\n  classes: Record<keyof typeof styles, string>\n}\n\nconst styles = createStyles({\n  container: {\n    margin: '10px'\n  }\n})\n\nconst HighlightedVertexDetails = (props: Props) => {\n  const vertex = props.graph.vertices[props.vertexId]\n  const entries: string[][] = [\n    ['index', props.vertexId.toString()],\n    ['degree', vertex.neighbors.length.toString()]\n  ]\n\n  vertex.attributes.forEach((val, key) => {\n    entries.push([key, val])\n  })\n\n  return (\n    <Paper className={props.classes.container}>\n      <KeyValueTable entries={entries} />\n    </Paper>\n  )\n}\n\nexport default withStyles(styles)(HighlightedVertexDetails)\n","import * as React from 'react'\nimport { useState } from 'react'\nimport { createStyles, withStyles } from '@material-ui/core'\nimport { Observable } from 'rxjs'\n\nimport GraphView from './GraphView'\nimport HighlightedVertexDetails from './HighlightedVertexDetails'\nimport TimedSimulation from 'model/TimedSimulation'\nimport { VertexId } from 'model/types'\n\nexport interface Props {\n  simulation: TimedSimulation\n  classes: Record<keyof typeof styles, string>\n  autozoomEnabled$: Observable<boolean>\n}\n\nconst styles = createStyles({\n  container: {\n    flex: '1',\n    display: 'flex'\n  },\n  details: {\n    position: 'absolute',\n    bottom: 0,\n    right: 0\n  }\n})\n\nconst GraphScene = (props: Props) => {\n  const [vertexId, setVertexId] = useState<VertexId | undefined>(undefined)\n\n  return (\n    <div className={props.classes.container}>\n      {vertexId !== undefined ? (\n        <HighlightedVertexDetails\n          vertexId={vertexId}\n          graph={props.simulation.graph}\n          classes={{ container: props.classes.details }}\n        />\n      ) : null}\n      <GraphView\n        graph={props.simulation.graph}\n        bufferBy={props.simulation.tick$}\n        onHighlightChange={setVertexId}\n        autozoomEnabled$={props.autozoomEnabled$}\n      />\n    </div>\n  )\n}\n\nexport default withStyles(styles)(GraphScene)\n","import * as React from 'react'\nimport {\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  FormControl,\n  FormLabel,\n  createStyles,\n  withStyles\n} from '@material-ui/core'\nimport { Transformation } from './DistributionChart'\n\ninterface Props {\n  classes: Record<keyof typeof styles, string>\n  setTransformation: (transformation: Transformation) => void\n  setXLog: (xLog: boolean) => void\n  setYLog: (yLog: boolean) => void\n  transformation: Transformation\n  xLog: boolean\n  yLog: boolean\n}\n\nconst styles = createStyles({\n  radioGroup: {\n    flexDirection: 'row'\n  }\n})\n\nclass DistributionConfigForm extends React.PureComponent<Props> {\n  public render() {\n    return (\n      <FormControl>\n        <FormLabel>Transformation</FormLabel>\n        <RadioGroup\n          aria-label=\"Transformation\"\n          name=\"transformation\"\n          value={this.props.transformation}\n          classes={{ root: this.props.classes.radioGroup }}\n          onChange={(e, val) =>\n            this.props.setTransformation(val as Transformation)\n          }\n        >\n          <FormControlLabel value=\"pdf\" control={<Radio />} label=\"PDF\" />\n          <FormControlLabel value=\"cdf\" control={<Radio />} label=\"CDF\" />\n          <FormControlLabel value=\"ccdf\" control={<Radio />} label=\"CCDF\" />\n        </RadioGroup>\n\n        <FormLabel>X Scale</FormLabel>\n        <RadioGroup\n          aria-label=\"Transformation\"\n          name=\"transformation\"\n          value={this.props.xLog ? 'log' : 'linear'}\n          classes={{ root: this.props.classes.radioGroup }}\n          onChange={(e, val) => this.props.setXLog(val === 'log')}\n        >\n          <FormControlLabel value=\"linear\" control={<Radio />} label=\"Linear\" />\n          <FormControlLabel value=\"log\" control={<Radio />} label=\"Log\" />\n        </RadioGroup>\n\n        <FormLabel>Y Scale</FormLabel>\n        <RadioGroup\n          aria-label=\"Transformation\"\n          name=\"transformation\"\n          value={this.props.yLog ? 'log' : 'linear'}\n          classes={{ root: this.props.classes.radioGroup }}\n          onChange={(e, val) => this.props.setYLog(val === 'log')}\n        >\n          <FormControlLabel value=\"linear\" control={<Radio />} label=\"Linear\" />\n          <FormControlLabel value=\"log\" control={<Radio />} label=\"Log\" />\n        </RadioGroup>\n      </FormControl>\n    )\n  }\n}\n\nexport default withStyles(styles)(DistributionConfigForm)\n","import * as React from 'react'\n\ninterface SNProps {\n  value: number\n}\n\nexport const trimmedExponential = (n: number) => {\n  const [mantissa, exponent] = n.toExponential().split('e')\n  return `${mantissa.substring(0, 4)}e${exponent}`\n}\n\nconst ScientificNotation = ({ value }: SNProps) => {\n  const [mantissa, exponent] = trimmedExponential(value).split('e')\n  const normalExponent =\n    exponent.substring(0, 1) === '+' ? exponent.substring(1) : exponent\n  return (\n    <>\n      {mantissa} 10<sup>{normalExponent}</sup>\n    </>\n  )\n}\n\nexport default ScientificNotation\n","import * as React from 'react'\nimport {\n  LineChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Legend,\n  Line,\n  Tooltip,\n  ResponsiveContainer\n} from 'recharts'\nimport { maxBy, minBy, reduce, range } from 'ramda'\nimport ScientificNotation, {\n  trimmedExponential\n} from 'components/ScientificNotation'\nimport min from 'ramda/es/min'\n\nexport type Transformation = 'pdf' | 'cdf' | 'ccdf'\n\ninterface Props {\n  distribution: number[]\n  transformation: Transformation\n  xLog: boolean\n  yLog: boolean\n  name: string\n}\n\ninterface Datum {\n  x: number\n  y: number\n}\n\nconst DistributionChart = (props: Props) => {\n  let data: Datum[] = transform(props.distribution, props.transformation).map(\n    (v, i) => ({\n      x: i,\n      y: v || 0\n    })\n  )\n\n  if (props.xLog) {\n    data = applyLog('x', data)\n  }\n\n  if (props.yLog) {\n    data = applyLog('y', data)\n  }\n\n  const xConfig = config(props.xLog, data.map(({ x }) => x))\n  const yConfig = config(props.yLog, data.map(({ y }) => y))\n\n  return (\n    <ResponsiveContainer height=\"100%\" width=\"100%\">\n      <LineChart\n        data={data}\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          type=\"number\"\n          dataKey=\"x\"\n          domain={['dataMin', 'dataMax']}\n          ticks={xConfig.ticks}\n          tickFormatter={value => trimmedExponential(xConfig.normalize(value))}\n        />\n        <YAxis\n          domain={['dataMin', 'dataMax']}\n          ticks={yConfig.ticks}\n          tickFormatter={value => trimmedExponential(yConfig.normalize(value))}\n        />\n        <Legend verticalAlign=\"top\" height={36} />\n        <Tooltip\n          formatter={(value: number) => (\n            <ScientificNotation value={yConfig.normalize(value)} />\n          )}\n          labelFormatter={(value: number) => (\n            <span>\n              {props.name}:{' '}\n              <ScientificNotation value={xConfig.normalize(value)} />\n            </span>\n          )}\n        />\n        <Line dataKey=\"y\" stroke=\"#8884d8\" isAnimationActive={false} name=\"P\" />\n      </LineChart>\n    </ResponsiveContainer>\n  )\n}\n\nexport default DistributionChart\n\nconst linearTicks = (minVal: number, maxVal: number) => {\n  const desiredTickCount = 6\n  const naturalCount = Math.floor(maxVal - minVal)\n  const tickCount = min(desiredTickCount, naturalCount)\n  const tickPeriod = Math.ceil((maxVal - minVal) / tickCount)\n  return range(1, tickCount + 1)\n    .map(i => i * tickPeriod)\n    .filter(v => v <= maxVal)\n}\n\nconst logTicks = (minVal: number, maxVal: number) =>\n  range(Math.ceil(minVal), Math.floor(maxVal) + 1)\n\nconst config = (log: boolean, values: number[]) => {\n  const normalize = log ? (v: number) => Math.pow(10, v) : (v: number) => v\n  const maxVal = reduce(maxBy((x: number) => x), -Infinity, values)\n  const minVal = reduce(minBy((x: number) => x), +Infinity, values)\n  const ticks = log ? logTicks(minVal, maxVal) : linearTicks(minVal, maxVal)\n\n  return { ticks, normalize }\n}\n\nconst applyLog = (selector: keyof Datum, data: Datum[]): Datum[] =>\n  data\n    .filter(datum => datum[selector] > 0)\n    .map(datum => ({ ...datum, [selector]: Math.log10(datum[selector]) }))\n\nconst transform = (distribution: number[], transformation: Transformation) => {\n  switch (transformation) {\n    case 'pdf':\n      return pdf(distribution)\n    case 'cdf':\n      return cdf(distribution)\n    default:\n      return ccdf(distribution)\n  }\n}\n\nconst pdf = (distribution: number[]): number[] => {\n  const total = distribution.reduce((a, b) => a + b, 0)\n  return distribution.map(x => x / total)\n}\nconst cdf = (distribution: number[]): number[] => {\n  const result: number[] = []\n  pdf(distribution).forEach(x =>\n    result.push((result[result.length - 1] || 0) + x)\n  )\n  return result\n}\n\nconst ccdf = (distribution: number[]): number[] =>\n  cdf(distribution).map(x => 1 - x)\n","import * as React from 'react'\nimport { min, max } from 'ramda'\n\nimport ScientificNotation from 'components/ScientificNotation'\nimport KeyValueTable from 'components/KeyValueTable'\n\ninterface Props {\n  distribution: number[]\n}\n\nconst DistributionStatistics = ({ distribution }: Props) => {\n  const nonZeroValues = distribution\n    .map((y, x) => ({ y, x }))\n    .filter(({ y }) => y > 0)\n  const count = nonZeroValues.reduce((curr, { y }) => curr + y, 0)\n  const minVal = nonZeroValues.reduce((curr, { x }) => min(curr, x), +Infinity)\n  const maxVal = nonZeroValues.reduce((curr, { x }) => max(curr, x), -Infinity)\n  const mean =\n    nonZeroValues.map(({ x, y }) => x * y).reduce((a, b) => a + b, 0) / count\n\n  const entries = [\n    ['min', <ScientificNotation key=\"min\" value={minVal} />],\n    ['max', <ScientificNotation key=\"max\" value={maxVal} />],\n    ['mean', <ScientificNotation key=\"mean\" value={mean} />]\n  ]\n\n  return <KeyValueTable entries={entries} />\n}\n\nexport default DistributionStatistics\n","import * as React from 'react'\nimport { createStyles, withStyles, Grid, Button } from '@material-ui/core'\nimport { Observable, Subscription } from 'rxjs'\n\nimport FileSaver from 'components/FileSaver'\n\nimport DistributionConfigForm from './DistributionConfigForm'\nimport DistributionChart, { Transformation } from './DistributionChart'\nimport DistributionStatistics from './DistributionStatistics'\n\nconst styles = createStyles({\n  container: {\n    flex: '1',\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '20px 50px'\n  },\n  chartContainer: {\n    flex: '1',\n    paddingBottom: '50px'\n  }\n})\n\nexport interface Props {\n  distribution: Observable<number[]>\n  name: string\n  classes: Record<keyof typeof styles, string>\n}\n\ninterface State {\n  distribution: number[]\n  transformation: Transformation\n  xLog: boolean\n  yLog: boolean\n}\n\nclass DistributionView extends React.Component<Props, State> {\n  private subscription: Subscription\n\n  public state: State = {\n    distribution: [],\n    transformation: 'pdf',\n    xLog: false,\n    yLog: false\n  }\n\n  public componentDidMount() {\n    this.subscription = this.props.distribution.subscribe(\n      (distribution: number[]) => this.setState({ distribution })\n    )\n  }\n\n  public componentWillUnmount() {\n    this.subscription.unsubscribe()\n  }\n\n  public render() {\n    const { distribution, ...config } = this.state\n\n    return (\n      <div className={this.props.classes.container}>\n        <div className={this.props.classes.chartContainer}>\n          <DistributionChart {...this.state} name={this.props.name} />\n        </div>\n        <Grid container={true} spacing={24}>\n          <Grid item={true} xs={6}>\n            <DistributionConfigForm\n              {...config}\n              setTransformation={(transformation: Transformation) =>\n                this.setState({ transformation })\n              }\n              setXLog={(xLog: boolean) => this.setState({ xLog })}\n              setYLog={(yLog: boolean) => this.setState({ yLog })}\n            />\n          </Grid>\n          <Grid item={true} xs={6}>\n            <FileSaver\n              contents={this.generateCSVBlob}\n              defaultFilename=\"distribution.csv\"\n              button={props => (\n                <Button variant=\"outlined\" {...props}>\n                  Export Distribution to CSV\n                </Button>\n              )}\n            />\n            <DistributionStatistics distribution={distribution} />\n          </Grid>\n        </Grid>\n      </div>\n    )\n  }\n\n  private generateCSVBlob = () => {\n    const csv = this.state.distribution.map((v, i) => `${i},${v}`).join('\\n')\n    return new Blob([csv], { type: 'text/csv;charset=utf-8' })\n  }\n}\n\nexport default withStyles(styles)(DistributionView)\n","import * as React from 'react'\nimport { useState } from 'react'\nimport {\n  createStyles,\n  withStyles,\n  IconButton,\n  Menu,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Select,\n  Chip,\n  Avatar\n} from '@material-ui/core'\nimport PlayIcon from '@material-ui/icons/PlayArrow'\nimport PauseIcon from '@material-ui/icons/Pause'\nimport StopIcon from '@material-ui/icons/Stop'\nimport MoreIcon from '@material-ui/icons/MoreVert'\n\nimport FileSaveDialog from 'components/FileSaveDialog'\n\nconst styles = createStyles({\n  chip: {\n    margin: '5px'\n  },\n  sliderWrapper: {\n    width: 150,\n    padding: '0 10px',\n    display: 'inline-flex'\n  },\n  track: {\n    background: '#ffffff'\n  },\n  thumb: {\n    background: '#999999'\n  },\n  formControl: {}\n})\n\ninterface Props {\n  autozoomEnabled: boolean\n  classes: Record<keyof typeof styles, string>\n  edgeCount: number\n  generateGraphML: () => Blob\n  pause: () => void\n  paused: boolean\n  play: () => void\n  setAutozoomEnabled: (enabled: boolean) => void\n  setSpeed: (speed: number) => void\n  speed: number\n  stop: () => void\n  vertexCount: number\n}\n\nconst TopbarActions = (props: Props) => {\n  const [menuAnchor, setMenuAnchor] = useState<HTMLElement | null>(null)\n  const [saveDialogOpen, setSaveDialogOpen] = useState(false)\n\n  const toggleAutozoom = () => {\n    setMenuAnchor(null)\n    props.setAutozoomEnabled(!props.autozoomEnabled)\n  }\n\n  const openSaveDialog = () => {\n    setMenuAnchor(null)\n    setSaveDialogOpen(true)\n  }\n\n  const closeSaveDialog = () => setSaveDialogOpen(false)\n\n  return (\n    <>\n      <Chip\n        variant=\"outlined\"\n        className={props.classes.chip}\n        avatar={<Avatar>{props.vertexCount}</Avatar>}\n        label=\"Vertices\"\n      />\n      <Chip\n        variant=\"outlined\"\n        className={props.classes.chip}\n        avatar={<Avatar>{props.edgeCount}</Avatar>}\n        label=\"Edges\"\n      />\n\n      <FormControl className={props.classes.formControl}>\n        <InputLabel htmlFor=\"age-native-simple\">Speed</InputLabel>\n        <Select\n          value={props.speed}\n          onChange={e => props.setSpeed(parseInt(e.target.value, 10))}\n        >\n          <MenuItem value={1}>1X</MenuItem>\n          <MenuItem value={2}>2X</MenuItem>\n          <MenuItem value={4}>4X</MenuItem>\n          <MenuItem value={8}>8X</MenuItem>\n          <MenuItem value={16}>16X</MenuItem>\n          <MenuItem value={32}>32X</MenuItem>\n        </Select>\n      </FormControl>\n      {props.paused ? (\n        <IconButton onClick={() => props.play()} color=\"inherit\">\n          <PlayIcon />\n        </IconButton>\n      ) : (\n        <IconButton onClick={() => props.pause()} color=\"inherit\">\n          <PauseIcon />\n        </IconButton>\n      )}\n      <IconButton onClick={props.stop} color=\"inherit\">\n        <StopIcon />\n      </IconButton>\n      <IconButton\n        onClick={({ currentTarget }) => setMenuAnchor(currentTarget)}\n        color=\"inherit\"\n      >\n        <MoreIcon />\n      </IconButton>\n      <Menu\n        anchorEl={menuAnchor}\n        open={menuAnchor !== null}\n        onClose={() => setMenuAnchor(null)}\n      >\n        <MenuItem onClick={() => toggleAutozoom()}>\n          {props.autozoomEnabled ? 'Disable' : 'Enable'} Autozoom\n        </MenuItem>\n        <MenuItem onClick={() => openSaveDialog()}>Export Graph</MenuItem>\n      </Menu>\n      <FileSaveDialog\n        open={saveDialogOpen}\n        onClose={closeSaveDialog}\n        defaultFilename={'graph.graphml'}\n        contents={props.generateGraphML}\n      />\n    </>\n  )\n}\n\nexport default withStyles(styles)(TopbarActions)\n","import * as React from 'react'\nimport { createStyles, withStyles, Tabs, Tab } from '@material-ui/core'\nimport { useState } from 'react'\nimport { sampleTime } from 'rxjs/operators'\n\nimport SimulationState from 'model/SimulationState'\nimport useObservable from 'hooks/useObservable'\nimport Layout from 'components/Layout'\n\nimport GraphPage from './GraphPage'\nimport DistributionPage from './DistributionPage/DistributionPage'\nimport TopbarActions from './TopbarActions'\n\nimport generateGraphML from 'model/generateGraphML'\n\nconst styles = createStyles({\n  hidden: {\n    display: 'none'\n  },\n  container: {\n    position: 'relative',\n    flex: '1',\n    display: 'flex'\n  }\n})\n\ninterface Props {\n  stop: () => void\n  simulationState: SimulationState\n  classes: Record<keyof typeof styles, string>\n}\n\ntype TabValue = 'graph' | 'degree_dist' | 'distance_dist'\n\nconst SimulationScene = ({ simulationState, classes, stop }: Props) => {\n  const {\n    simulation,\n    autozoomEnabled$,\n    degreeDistributionCollector,\n    distanceToRootDistributionCollector,\n    setAutozoomEnabled\n  } = simulationState\n  const { setSpeed, play, pause } = simulation\n\n  const [currentTab, setCurrentTab] = useState<TabValue>('graph')\n\n  const autozoomEnabled = useObservable(autozoomEnabled$, true)\n  const paused = useObservable(simulation.paused$, true)\n  const speed = useObservable(simulation.speed$, 0)\n  const edgeCount = useObservable(\n    simulation.graph.edgeCount$.pipe(sampleTime(250)),\n    0\n  )\n  const vertexCount = useObservable(\n    simulation.graph.vertexCount$.pipe(sampleTime(250)),\n    0\n  )\n\n  // Hide components instead of unmounting them to avoid re-rendering the graph\n  const graphViewClasses =\n    currentTab === 'graph' ? {} : { container: classes.hidden }\n  const degreeDistClasses =\n    currentTab === 'degree_dist' ? {} : { container: classes.hidden }\n  const distanceDistClasses =\n    currentTab === 'distance_dist' ? {} : { container: classes.hidden }\n\n  const topbarActionsProps = {\n    autozoomEnabled,\n    edgeCount,\n    generateGraphML: generateGraphML.bind(null, simulation.graph),\n    pause,\n    paused,\n    play,\n    setAutozoomEnabled,\n    setSpeed,\n    speed,\n    stop,\n    vertexCount\n  }\n\n  return (\n    <Layout actions={<TopbarActions {...topbarActionsProps} />}>\n      <Tabs\n        value={currentTab}\n        onChange={(evt, value) => setCurrentTab(value)}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        centered={true}\n      >\n        <Tab value=\"graph\" label=\"Graph\" />\n        <Tab value=\"degree_dist\" label=\"Degree\" />\n        <Tab value=\"distance_dist\" label=\"Distance to Root\" />\n      </Tabs>\n      <div className={classes.container}>\n        <GraphPage\n          simulation={simulation}\n          classes={graphViewClasses}\n          autozoomEnabled$={autozoomEnabled$}\n        />\n        <DistributionPage\n          distribution={degreeDistributionCollector.distribution$}\n          classes={degreeDistClasses}\n          name=\"Degree\"\n        />\n        <DistributionPage\n          distribution={distanceToRootDistributionCollector.distribution$}\n          classes={distanceDistClasses}\n          name=\"Distance to Root\"\n        />\n      </div>\n    </Layout>\n  )\n}\n\nexport default withStyles(styles)(SimulationScene)\n","import * as xmlbuilder from 'xmlbuilder'\nimport union from 'ramda/es/union'\n\nimport ReadGraph from 'model/ReadGraph'\n\nexport default (graph: ReadGraph) => {\n  const keyXml = graph.vertices\n    .map(v => Array.from(v.attributes.keys()))\n    .reduce((agg, curr) => union(agg, curr), [])\n    .map(key => ({\n      '@id': `d${key}`,\n      '@for': 'node',\n      '@attr.name': key,\n      '@attr.type': 'string',\n      default: key === 'color' ? [{ '#text': 'white' }] : []\n    }))\n  const nodeXml = graph.vertices.map((v, i) => ({\n    '@id': `n${i}`,\n    data: Array.from(v.attributes.keys()).map(key => ({\n      '@key': `d${key}`,\n      '#text': v.attributes.get(key)!\n    }))\n  }))\n  const edgeXml = graph.edges.map(([s, t], i) => ({\n    '@source': `n${s}`,\n    '@target': `n${t}`\n  }))\n  const graphXml = {\n    graphml: {\n      '@xmlns': 'http://graphml.graphdrawing.org/xmlns',\n      '@xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n      '@xsi:schemaLocation': [\n        'http://graphml.graphdrawing.org/xmlns',\n        'http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd'\n      ].join(' '),\n      key: keyXml,\n      graph: {\n        '@id': 'G',\n        '@edgedefault': 'undirected',\n        node: nodeXml,\n        edge: edgeXml\n      }\n    }\n  }\n  const xml = xmlbuilder\n    .create(graphXml, { encoding: 'utf-8' })\n    .end({ pretty: true })\n  return new Blob([xml], { type: 'application/graphml+xml;charset=utf-8' })\n}\n","import * as React from 'react'\nimport { createMuiTheme, MuiThemeProvider, colors } from '@material-ui/core'\nimport EditorPage from './EditorPage'\nimport SimulationPage from './SimulationPage'\nimport useObservable from 'hooks/useObservable'\nimport AppState from 'model/AppState'\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  },\n  palette: {\n    type: 'light',\n    primary: colors.grey,\n    secondary: colors.lightBlue\n  }\n})\n\ninterface Props {\n  appState: AppState\n}\n\nconst Root = ({ appState }: Props) => {\n  const simulationState = useObservable(appState.simulationState$, undefined)\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      {simulationState ? (\n        <SimulationPage\n          stop={appState.stop}\n          simulationState={simulationState}\n        />\n      ) : (\n        <EditorPage appState={appState} />\n      )}\n    </MuiThemeProvider>\n  )\n}\nexport default Root\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { ReplaySubject, Subject, Subscription, interval } from 'rxjs'\nimport { buffer } from 'rxjs/operators'\n\nimport { VertexId } from 'model/types'\nimport GraphEvent from 'model/GraphEvent'\nimport ReadGraph from 'model/ReadGraph'\n\nconst changeDist = (dist: number[], idx: number, amt: number) => {\n  dist[idx] = dist[idx] || 0\n  dist[idx] += amt\n}\n\nclass DegreeDistributionCollector {\n  private subscription: Subscription\n  private distribution: number[] = []\n  private distributionSubject: Subject<number[]> = new ReplaySubject(1)\n  private degrees: Map<VertexId, number> = new Map()\n\n  public distribution$ = this.distributionSubject.asObservable()\n\n  constructor(graph: ReadGraph) {\n    this.subscription = graph.event$\n      .pipe(buffer(interval(500)))\n      .subscribe(this.onGraphEvents)\n  }\n\n  public destroy() {\n    this.subscription.unsubscribe()\n  }\n\n  private onGraphEvents = (changes: GraphEvent[]) => {\n    changes.forEach(this.processEvent)\n    this.distributionSubject.next(this.distribution)\n  }\n\n  private processEvent = (event: GraphEvent) => {\n    switch (event.type) {\n      case 'AddedVertex':\n        this.degrees.set(event.id, 0)\n        changeDist(this.distribution, 0, 1)\n        break\n      case 'AddedEdge':\n        const [v1, v2] = event.edge\n        const d1 = this.degrees.get(v1)!\n        const d2 = this.degrees.get(v2)!\n\n        changeDist(this.distribution, d1, -1)\n        changeDist(this.distribution, d1 + 1, +1)\n        this.degrees.set(v1, d1 + 1)\n\n        if (v1 !== v2) {\n          changeDist(this.distribution, d2, -1)\n          changeDist(this.distribution, d2 + 1, +1)\n          this.degrees.set(v2, d2 + 1)\n        }\n        break\n      default:\n    }\n  }\n}\n\nexport default DegreeDistributionCollector\n","import { ReplaySubject, Subject, Subscription, interval } from 'rxjs'\nimport { buffer } from 'rxjs/operators'\n\nimport { VertexId } from 'model/types'\nimport GraphEvent from 'model/GraphEvent'\nimport ReadGraph from 'model/ReadGraph'\n\nconst changeDist = (dist: number[], idx: number, amt: number) => {\n  dist[idx] = dist[idx] || 0\n  dist[idx] += amt\n}\n\nclass DistanceToRootDistributionCollector {\n  private subscription: Subscription\n  private distribution: number[] = []\n  private distributionSubject: Subject<number[]> = new ReplaySubject(1)\n  private distances: Map<VertexId, number> = new Map()\n\n  public distribution$ = this.distributionSubject.asObservable()\n\n  constructor(graph: ReadGraph) {\n    this.subscription = graph.event$\n      .pipe(buffer(interval(500)))\n      .subscribe(this.onGraphEvents)\n  }\n\n  public destroy() {\n    this.subscription.unsubscribe()\n  }\n\n  private onGraphEvents = (changes: GraphEvent[]) => {\n    changes.forEach(this.processEvent)\n    this.distributionSubject.next(this.distribution)\n  }\n\n  private processEvent = (event: GraphEvent) => {\n    switch (event.type) {\n      case 'AddedVertex':\n        if (event.id === 0) {\n          this.distances.set(event.id, 0)\n          changeDist(this.distribution, 0, +1)\n        }\n        break\n      case 'AddedEdge':\n        const [v1, v2] = event.edge\n        const d1 = this.distances.get(v1)\n        const d2 = this.distances.get(v2)\n        if (d1 === undefined && d2 === undefined) {\n          // no change, nothing to do\n        } else if (d1 !== undefined && d2 === undefined) {\n          this.distances.set(v2, d1 + 1)\n          changeDist(this.distribution, d1 + 1, +1)\n        } else if (d2 !== undefined && d1 === undefined) {\n          this.distances.set(v1, d2 + 1)\n          changeDist(this.distribution, d2 + 1, +1)\n        } else if (d1 !== undefined && d2 !== undefined) {\n          if (d2 > d1) {\n            // Decrease v2 distance\n            this.distances.set(v2, d1 + 1)\n            changeDist(this.distribution, d2, -1)\n            changeDist(this.distribution, d1 + 1, +1)\n          } else if (d1 > d2) {\n            // Decrease v1 distance\n            this.distances.set(v1, d2 + 1)\n            changeDist(this.distribution, d1, -1)\n            changeDist(this.distribution, d2 + 1, +1)\n          }\n        }\n        break\n      default:\n    }\n  }\n}\n\nexport default DistanceToRootDistributionCollector\n","import { VertexId, VertexAttributes } from 'model/types'\nimport ReadVertex from 'model/ReadVertex'\n\nexport default class Vertex implements ReadVertex {\n  public id: VertexId\n  public attributes: VertexAttributes = new Map()\n  public neighbors: VertexId[] = []\n\n  constructor(id: VertexId) {\n    this.id = id\n  }\n}\n","import { ReplaySubject } from 'rxjs'\n\nimport { VertexId, Edge, EdgeId } from 'model/types'\nimport GraphEvent from 'model/GraphEvent'\nimport ReadGraph from 'model/ReadGraph'\nimport Vertex from 'model/Vertex'\n\nexport default class Graph implements ReadGraph {\n  private eventSubject = new ReplaySubject<GraphEvent>()\n  private edgeCountSubject = new ReplaySubject<number>(1)\n  private vertexCountSubject = new ReplaySubject<number>(1)\n\n  public edges: Edge[] = []\n  public vertices: Vertex[] = []\n  public event$ = this.eventSubject.asObservable()\n  public edgeCount$ = this.edgeCountSubject.asObservable()\n  public vertexCount$ = this.vertexCountSubject.asObservable()\n\n  constructor() {\n    this.edgeCountSubject.next(0)\n    this.vertexCountSubject.next(0)\n  }\n\n  public addVertex = () => {\n    const vertex = new Vertex(this.vertices.length)\n    this.vertices.push(vertex)\n    this.vertexCountSubject.next(this.vertices.length)\n    this.eventSubject.next({ type: 'AddedVertex', id: vertex.id })\n\n    return vertex.id\n  }\n\n  public connectVertices = (v1: VertexId, v2: VertexId) => {\n    if (v1 >= this.vertices.length) {\n      return\n    }\n    if (v1 < 0) {\n      return\n    }\n    if (v2 >= this.vertices.length) {\n      return\n    }\n    if (v2 < 0) {\n      return\n    }\n\n    const edgeId = this.edges.length\n    const edge: Edge = [v1, v2]\n    this.edges.push(edge)\n    this.edgeCountSubject.next(this.edges.length)\n    this.vertices[v1].neighbors.push(v2)\n    if (v1 !== v2) {\n      this.vertices[v2].neighbors.push(v1)\n    }\n    this.eventSubject.next({ type: 'AddedEdge', id: edgeId, edge })\n    return edgeId\n  }\n\n  public setAttribute = (id: VertexId, key: string, value: string) => {\n    if (this.vertices.length > id) {\n      this.vertices[id].attributes.set(key, value)\n      this.eventSubject.next({ type: 'SetAttribute', id, key, value })\n      return true\n    } else {\n      return false\n    }\n  }\n\n  public getAttribute(id: VertexId, key: string): string | undefined {\n    if (this.vertices.length > id) {\n      return this.vertices[id].attributes.get(key)\n    } else {\n      return undefined\n    }\n  }\n\n  public getNeighbor(id: VertexId, idx: number): VertexId | undefined {\n    if (this.vertices.length > id && this.vertices[id].neighbors.length > idx) {\n      return this.vertices[id].neighbors[idx]\n    } else {\n      return undefined\n    }\n  }\n\n  public getNeighborCount(id: VertexId): number | undefined {\n    if (this.vertices.length > id) {\n      return this.vertices[id].neighbors.length\n    } else {\n      return undefined\n    }\n  }\n\n  public getEdge(id: EdgeId): Edge | undefined {\n    if (this.edges.length > id) {\n      return this.edges[id]\n    } else {\n      return undefined\n    }\n  }\n\n  public getRandomVertex(): VertexId | undefined {\n    if (this.vertices.length > 0) {\n      return Math.floor(Math.random() * this.vertices.length)\n    } else {\n      return undefined\n    }\n  }\n\n  public getRandomEdge(): Edge | undefined {\n    if (this.edges.length > 0) {\n      const edgeId = Math.floor(Math.random() * this.edges.length)\n      return this.edges[edgeId]\n    } else {\n      return undefined\n    }\n  }\n\n  public getRandomNeighbor(id: VertexId): VertexId | undefined {\n    if (this.vertices.length > id && this.vertices[id].neighbors.length > 0) {\n      const neighborIndex = Math.floor(\n        Math.random() * this.vertices[id].neighbors.length\n      )\n      const neighborId = this.vertices[id].neighbors[neighborIndex]\n      return neighborId\n    } else {\n      return undefined\n    }\n  }\n}\n","import { clearInterval, setInterval } from 'timers'\n\n/** A speed-configurable and pausable timer */\nexport default class Timer {\n  private period: number\n  private callback: () => void\n  private interval: NodeJS.Timeout\n  private running: boolean = false\n  private shouldReschedule: boolean = false\n  private destroyed: boolean = false\n\n  constructor(initialSpeed: number, callback: () => void) {\n    this.callback = callback\n    this.setSpeed(initialSpeed)\n  }\n\n  public isPaused() {\n    return !this.running\n  }\n\n  public play() {\n    if (!this.running) {\n      this.reschedule()\n    }\n  }\n\n  public pause() {\n    this.running = false\n    clearInterval(this.interval)\n  }\n\n  public setSpeed(speed: number) {\n    this.period = 320 / speed\n    this.shouldReschedule = true\n  }\n\n  private reschedule() {\n    this.running = true\n    this.shouldReschedule = false\n    clearInterval(this.interval)\n    this.interval = setInterval(this.handler, this.period)\n  }\n\n  public destroy() {\n    clearInterval(this.interval)\n    this.shouldReschedule = false\n    this.destroyed = true\n  }\n\n  private handler = () => {\n    if (this.destroyed) {\n      return\n    }\n\n    this.callback()\n\n    if (this.shouldReschedule) {\n      this.reschedule()\n    }\n  }\n}\n","import * as fengari from 'fengari-web'\nimport Graph from 'model/Graph'\nimport { VertexId, Edge, EdgeId } from 'model/types'\n\nconst lua = fengari.lua\n\ntype StdLibFunction = (graph: Graph) => (L: {}) => number\n\nexport interface StdLibEntry {\n  fn: StdLibFunction\n  name: string\n}\n\nconst stdlib: StdLibEntry[] = []\n\nconst openStdLib = (L: {}, graph: Graph) => {\n  for (const func of stdlib) {\n    lua.lua_pushcfunction(L, func.fn(graph))\n    lua.lua_setglobal(L, func.name)\n  }\n}\n\nexport default openStdLib\n\nconst define = (name: string, fn: StdLibFunction) => {\n  stdlib.push({ name, fn })\n}\n\ndefine('addVertex', (graph: Graph) => (L: {}) => {\n  const vertexId = graph.addVertex()\n\n  return returnIndex(L, vertexId)\n})\n\ndefine('connectVertices', (graph: Graph) => (L: {}) => {\n  const id1 = lua.lua_tonumber(L, 1) - 1\n  const id2 = lua.lua_tonumber(L, 2) - 1\n\n  const edgeId = graph.connectVertices(id1, id2)\n\n  return returnIndex(L, edgeId)\n})\n\ndefine('setAttributes', (graph: Graph) => (L: {}) => {\n  const id = lua.lua_tonumber(L, 1) - 1\n  const key = fengari.to_jsstring(lua.lua_tostring(L, 2))\n  const val = fengari.to_jsstring(lua.lua_tostring(L, 3))\n\n  const resp = graph.setAttribute(id, key, val)\n\n  lua.lua_pushboolean(L, resp)\n  return 1\n})\n\ndefine('getAttributes', (graph: Graph) => (L: {}) => {\n  const id = lua.lua_tonumber(L, 1) - 1\n  const key = fengari.to_jsstring(lua.lua_tostring(L, 2))\n\n  const attr = graph.getAttribute(id, key)\n\n  return returnString(L, attr)\n})\n\ndefine('getNeighbor', (graph: Graph) => (L: {}) => {\n  const id = lua.lua_tonumber(L, 1) - 1\n  const neighborIndex = lua.lua_tonumber(L, 2) - 1\n\n  const neighborId = graph.getNeighbor(id, neighborIndex)\n\n  return returnIndex(L, neighborId)\n})\n\ndefine('getNeighborCount', (graph: Graph) => (L: {}) => {\n  const id = lua.lua_tonumber(L, 1) - 1\n\n  const neighborCount = graph.getNeighborCount(id)\n\n  return returnNumber(L, neighborCount)\n})\n\ndefine('getVertexCount', (graph: Graph) => (L: {}) => {\n  const count = graph.vertices.length\n\n  return returnNumber(L, count)\n})\n\ndefine('getEdgeCount', (graph: Graph) => (L: {}) => {\n  const count = graph.edges.length\n\n  return returnNumber(L, count)\n})\n\ndefine('getEdge', (graph: Graph) => (L: {}) => {\n  const id = lua.lua_tonumber(L, 1) - 1\n\n  const edge = graph.getEdge(id)\n\n  return returnEdge(L, edge)\n})\n\ndefine('getRandomVertex', (graph: Graph) => (L: {}) => {\n  const id = graph.getRandomVertex()\n\n  return returnIndex(L, id)\n})\n\ndefine('getRandomEdge', (graph: Graph) => (L: {}) => {\n  const edge = graph.getRandomEdge()\n\n  return returnEdge(L, edge)\n})\n\ndefine('getRandomNeighbor', (graph: Graph) => (L: {}) => {\n  const id = lua.lua_tonumber(L, 1) - 1\n\n  const neighborId = graph.getRandomNeighbor(id)\n\n  return returnIndex(L, neighborId)\n})\n\nconst returnEdge = (L: {}, edge?: Edge) => {\n  if (edge !== undefined) {\n    const [a, b] = edge\n    lua.lua_pushnumber(L, a + 1)\n    lua.lua_pushnumber(L, b + 1)\n    return 2\n  } else {\n    lua.lua_pushnil(L)\n    return 1\n  }\n}\n\nconst returnIndex = (L: {}, id?: VertexId | EdgeId) => {\n  // All indexes in lua are 1-based, so this translates to that and sends.\n  if (id !== undefined) {\n    lua.lua_pushnumber(L, id + 1)\n  } else {\n    lua.lua_pushnil(L)\n  }\n  return 1\n}\n\nconst returnNumber = (L: {}, num?: number) => {\n  if (num !== undefined) {\n    lua.lua_pushnumber(L, num)\n  } else {\n    lua.lua_pushnil(L)\n  }\n  return 1\n}\n\nconst returnString = (L: {}, str?: string) => {\n  if (str !== undefined) {\n    lua.lua_pushstring(L, str)\n  } else {\n    lua.lua_pushnil(L)\n  }\n  return 1\n}\n","import * as fengari from 'fengari-web'\n\nimport Graph from 'model/Graph'\nimport SimulationError from 'model/SimulationError'\nimport openStdLib from './openStdLib'\n\nconst lua = fengari.lua\nconst lauxlib = fengari.lauxlib\nconst lualib = fengari.lualib\n\nconst prefix = `\nfunction render()\n  coroutine.yield()\nend\n\nfunction main()\n`.trim()\n\nconst sufix = 'end'\n\nconst wrapCode = (code: string) => [prefix, code, sufix].join('\\n')\n\nconst runtimeError = (lineNo: number): SimulationError => ({\n  type: 'runtime',\n  lineNo\n})\n\nconst syntaxError = (lineNo: number, message?: string): SimulationError => ({\n  type: 'syntax',\n  lineNo,\n  message\n})\n\nexport default function* luaSimulation(\n  code: string,\n  graph: Graph\n): IterableIterator<void | SimulationError> {\n  const L = lauxlib.luaL_newstate()\n  lualib.luaL_openlibs(L)\n  openStdLib(L, graph)\n\n  if (lauxlib.luaL_loadstring(L, fengari.to_luastring(wrapCode(code)))) {\n    // Syntax Error\n\n    const regex = /^\\[[^\\]]*\\]:(\\d+): (.*)$/\n    const error = fengari.to_jsstring(lua.lua_tostring(L, 1))\n    const matches = error.match(regex)\n    if (matches && matches.length === 3) {\n      const lineNo = parseInt(matches[1], 10) - prefix.split('\\n').length\n      const message = matches[2]\n      return syntaxError(lineNo, message)\n    }\n\n    return syntaxError(0)\n  }\n\n  if (lua.lua_pcall(L, 0, 0, 0)) {\n    // Some strange uncaught error\n    return runtimeError(0)\n  }\n  const L2 = lua.lua_newthread(L)\n  lua.lua_getglobal(L2, 'main')\n\n  while (true) {\n    try {\n      const resp = lua.lua_resume(L2, null, 0)\n      yield\n      if (resp === 0) {\n        break\n      }\n    } catch (e) {\n      console.log(e)\n      const debug = new lua.lua_Debug()\n      if (lua.lua_getstack(L2, 0, debug) > 0) {\n        lua.lua_getinfo(L2, fengari.to_luastring('Slnt', true), debug)\n        const lineNo = debug.currentline - prefix.split('\\n').length\n        return runtimeError(lineNo)\n      } else {\n        // Stack depth is 0 on thread L2, it's an uncaught error\n        return runtimeError(0)\n      }\n    }\n  }\n\n  return\n}\n","import { Subject, ReplaySubject } from 'rxjs'\n\nimport Graph from 'model/Graph'\nimport ReadGraph from 'model/ReadGraph'\nimport SimulationError from 'model/SimulationError'\n\nimport Timer from './Timer'\nimport luaSimulation from './luaSimulation'\n\nexport type ErrorCallback = (error: SimulationError) => void\n\nexport default class TimedSimulation {\n  private pausedSubject: Subject<boolean> = new ReplaySubject(1)\n  private speedSubject: Subject<number> = new ReplaySubject(1)\n  private tickSubject: Subject<void | SimulationError> = new Subject()\n\n  public graph: ReadGraph\n  public paused$ = this.pausedSubject.asObservable()\n  public speed$ = this.speedSubject.asObservable()\n  public tick$ = this.tickSubject.asObservable()\n\n  private timer: Timer\n  private iterator: IterableIterator<void | SimulationError>\n  private onError: ErrorCallback\n\n  constructor(code: string, onError: ErrorCallback) {\n    const initialSpeed = 1\n    this.onError = onError\n\n    const graph = new Graph()\n    this.graph = graph\n    this.iterator = luaSimulation(code, graph)\n\n    this.timer = new Timer(initialSpeed, this.tick)\n\n    this.pausedSubject.next(this.timer.isPaused())\n    this.speedSubject.next(initialSpeed)\n  }\n\n  public pause = () => {\n    this.timer.pause()\n    this.pausedSubject.next(this.timer.isPaused())\n  }\n\n  public play = () => {\n    this.timer.play()\n    this.pausedSubject.next(this.timer.isPaused())\n  }\n\n  public destroy() {\n    this.timer.destroy()\n  }\n\n  public setSpeed = (speed: number) => {\n    this.timer.setSpeed(speed)\n    this.speedSubject.next(speed)\n  }\n\n  private tick = () => {\n    const result = this.iterator.next()\n\n    // Publish tick event, so other's can sync with tick event\n    this.tickSubject.next(result.value)\n\n    if (result.done) {\n      this.pause()\n    }\n\n    // If returned anything, than it is an error\n    if (result.value) {\n      this.onError(result.value)\n    }\n  }\n}\n","import { ReplaySubject } from 'rxjs'\nimport DegreeDistributionCollector from 'model/DegreeDistributionCollector'\nimport DistanceToRootDistributionCollector from 'model/DistanceToRootDistributionCollector'\nimport TimedSimulation, { ErrorCallback } from 'model/TimedSimulation'\n\nexport default class SimulationState {\n  private autozoomEnabledSubject = new ReplaySubject<boolean>(1)\n  private autozoomEnabled: boolean\n\n  public readonly simulation: TimedSimulation\n  public readonly degreeDistributionCollector: DegreeDistributionCollector\n  public readonly distanceToRootDistributionCollector: DistanceToRootDistributionCollector\n  public readonly autozoomEnabled$ = this.autozoomEnabledSubject.asObservable()\n\n  constructor(code: string, onError: ErrorCallback) {\n    this.setAutozoomEnabled(true)\n    this.simulation = new TimedSimulation(code, onError)\n    this.simulation.play()\n    this.degreeDistributionCollector = new DegreeDistributionCollector(\n      this.simulation.graph\n    )\n    this.distanceToRootDistributionCollector = new DistanceToRootDistributionCollector(\n      this.simulation.graph\n    )\n  }\n\n  public setAutozoomEnabled = (autozoomEnabled: boolean) => {\n    if (this.autozoomEnabled !== autozoomEnabled) {\n      this.autozoomEnabled = autozoomEnabled\n      this.autozoomEnabledSubject.next(autozoomEnabled)\n    }\n  }\n\n  public destroy() {\n    this.simulation.destroy()\n    this.degreeDistributionCollector.destroy()\n    this.distanceToRootDistributionCollector.destroy()\n  }\n}\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport Root from 'components/Root'\nimport 'index.scss'\nimport * as serviceWorker from './serviceWorker'\nimport AppState from 'model/AppState'\n\nconst appState = new AppState()\nReactDOM.render(<Root appState={appState} />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { ReplaySubject } from 'rxjs'\n\nimport tutorial from 'examples/tutorial.lua'\n\nimport SimulationError from 'model/SimulationError'\nimport SimulationState from 'model/SimulationState'\n\nexport default class AppState {\n  private codeSubject = new ReplaySubject<string>(1)\n  private simulationStateSubject = new ReplaySubject<\n    SimulationState | undefined\n  >(1)\n  private lastErrorSubject = new ReplaySubject<SimulationError | undefined>(1)\n  private code: string\n  private simulationState?: SimulationState\n  public readonly code$ = this.codeSubject.asObservable()\n  public readonly simulationState$ = this.simulationStateSubject.asObservable()\n  public readonly lastError$ = this.lastErrorSubject.asObservable()\n  constructor() {\n    fetch(tutorial)\n      .then(r => r.text())\n      .then((code: string) => this.setCode(code))\n  }\n  public setCode = (code: string) => {\n    this.lastErrorSubject.next(undefined)\n    this.code = code\n    this.codeSubject.next(code)\n  }\n  public stop = () => {\n    if (this.simulationState) {\n      this.simulationState.destroy()\n    }\n    this.simulationState = undefined\n    this.simulationStateSubject.next(undefined)\n  }\n  public run = () => {\n    this.stop()\n    this.simulationState = new SimulationState(this.code, this.onError)\n    this.simulationStateSubject.next(this.simulationState)\n  }\n  private onError = (error: SimulationError) => {\n    this.simulationStateSubject.next(undefined)\n    this.lastErrorSubject.next(error)\n  }\n}\n","module.exports = __webpack_public_path__ + \"static/media/barabasi_albert.e12d0b43.lua\";","module.exports = __webpack_public_path__ + \"static/media/nrrw.58c785df.lua\";","module.exports = __webpack_public_path__ + \"static/media/bgrw.20bf2e1a.lua\";","module.exports = __webpack_public_path__ + \"static/media/gnp.f71262a7.lua\";","module.exports = __webpack_public_path__ + \"static/media/random_tree.6611f9e1.lua\";","module.exports = __webpack_public_path__ + \"static/media/tutorial.de167a57.lua\";"],"sourceRoot":""}